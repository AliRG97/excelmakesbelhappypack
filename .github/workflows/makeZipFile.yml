# This is a basic workflow to help you get started with Actions

name: CI
on:
  push:
    tags:
      - 'v*'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - run: rsync -arv --exclude='.git/' --exclude='.github/' --exclude='.gitignore' --exclude='*.py' --exclude='*.json' . ./excelmakesbelhappypack
    - name: Zip Folder
      run: |
          zip -r excelmakesbelhappypack.zip ./excelmakesbelhappy excelmakesbelhappypack.mod
          echo ::set-env name=RELEASE_VERSION::${GITHUB_REF:10}
    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./excelmakesbelhappypack.zip
          asset_name: excelmakesbelhappypack${{ env.RELEASE_VERSION }}.zip
          asset_content_type: application/zip

