#	$province$

scripted_effects_can_dev_prov = {
	is_state = yes
	controlled_by = owner
}
#check if monarch power is at there max cap
power_at_cap = {
	$type$_power = $value$
}
#calc if provence $first$ has lower or equal cost to dev than $second$ 
is_var_lower = {
		NOT = {	
			check_variable = {
			which = $varname$
			which = $scope$
		}   
	}
} 	
is_SPEC_TAG = {
	OR = {
		tag = REB
		tag = NAT
		tag = PIR
}	} 

trigger_of_monarch_power = {
	variable_arithmetic_trigger = {
		export_to_variable = {
			variable_name =  power
			value = trigger_value:$power_type$
		}
		export_to_variable = {
			variable_name = powerCost
			value = modifier:all_power_cost
		}
		change_variable = {
			which = powerCost
			value = 1
		}
		multiply_variable = {
			which = powerCost
			which = 9.99
		}
		subtract_variable = {
			which = monarchCap
			which = powerCost
		}
		check_variable = {
			which = power
			which = monarchCap
		}
	}
}
